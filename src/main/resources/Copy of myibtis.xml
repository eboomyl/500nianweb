<?xmlversion="1.0"encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap>
	<!-- 通过typeAlias使得我们在下面使用Student实体类的时候不需要写包名 -->
	<typeAlias alias="UserinfoDTO" type="com.ayovel.nian.modle.UserinfoDTO" />
	<select id="queryUserInfoForID" resultClass="UserinfoDTO"  parameterClass="String">
		select * from userinfo where id=#value#
	</select>

		<!-- 这样以后改了sql，就不需要去改java代码了 -->
		<!-- id表示select里的sql语句，resultClass表示返回结果的类型 -->
		<select id="selectAllStudent" resultClass="UserinfoDTO">
			select * from userinfo
		</select>

		<insert id="addStudent" parameterClass="UserinfoDTO">
			insert into
			tbl_student(name,birth,score) values
			(#name#,#birth#,#score#)
			<selectKey resultClass="int" keyProperty="id">
				select @@identity as inserted
				<!-- 还有一点需要注意的是不同的数据库生产商生成主键的方式不一样，有些是预先生成 (pre-generate)主键的，如Oracle和PostgreSQL。 
					有些是事后生成(post-generate)主键的，如MySQL和SQL Server 所以如果是Oracle数据库，则需要将selectKey写在insert之前 -->
			</selectKey>

		</insert>

		<delete id="deleteStudentById" parameterClass="int">
			<!-- #id#里的id可以随意取，但是上面的insert则会有影响，因为上面的name会从Student里的属性里去查找 -->
			<!-- 我们也可以这样理解，如果有#占位符，则ibatis会调用parameterClass里的属性去赋值 -->
			delete from tbl_student where id=#id#
		</delete>


		<update id="updateStudent" parameterClass="Student">
			update tbl_student set
			name=#name#,birth=#birth#,score=#score# where id=#id#
		</update>
</sqlMap>
	
	